stages:
  - test
  - build
  - push
  - deploy

test:
  tags:
    - crawler
  stage: test
  script:
    - echo 'building test images..'
    - docker build -t tuturu0/crawler_test:$CRAWLER_VERSION -f search_engine_crawler/Dockerfile-test .
    - docker build -t tuturu0/crawler_ui_test:$UI_VERSION -f search_engine_ui/Dockerfile-test .
    - docker login -u $DOCKERHUB_USER -p $DOCKER_TOKEN
    - docker push tuturu0/crawler_test:$CRAWLER_VERSION
    - docker push tuturu0/crawler_ui_test:$UI_VERSION
    - echo 'Brunning test images..'
    - sudo rm -rf /test_dir
    - sudo mkdir /test_dir && sudo cp -r ./* /test_dir
    - docker compose -f /test_dir/docker-compose-test.yml up -d
    - echo "waiting for logs.." && sleep 20
    - echo 'Printing logs for ui..'
    - docker compose -f /test_dir/docker-compose-test.yml logs ui | sudo tee test_ui.log
    - echo 'Printing logs for crawler..'
    - docker compose -f /test_dir/docker-compose-test.yml logs crawler | sudo tee test_crawler.log
    - if grep -q "wrong" test_ui.log || grep -q "wrong" test_crawler.log; then exit 1; fi
    - docker compose -f /test_dir/docker-compose-test.yml down
    - sudo rm -rf /test_dir
  when: manual  


build:
  tags:
    - crawler
  stage: build
  script:
    - echo 'building..'
    - docker build -t tuturu0/crawler:$CRAWLER_VERSION ./search_engine_crawler
    - docker build -t tuturu0/crawler_ui:$UI_VERSION ./search_engine_ui
  needs: ["test"]
  when: on_success
      
push:
  tags:
    - crawler
  stage: push
  script:
    - echo 'pushing..'
    - docker login -u $DOCKERHUB_USER -p $DOCKER_TOKEN
    - docker push tuturu0/crawler:$CRAWLER_VERSION
    - docker push tuturu0/crawler_ui:$UI_VERSION
  needs: ["test", "build"]
  when: on_success
  
deploy:
  tags:
    - crawler
  stage: deploy
  script:
    - echo 'deploying..'
    - docker compose -f /docker_sys/crawler/docker-compose.yml down
    - sudo cp -r ./* /docker_sys/crawler
    - docker compose -f /docker_sys/crawler/docker-compose.yml up -d
    - echo 'ready!'
  needs: ["test", "build", "push"]
  when: on_success
